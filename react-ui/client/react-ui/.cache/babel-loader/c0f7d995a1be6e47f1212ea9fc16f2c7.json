{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\src\\\\pages\\\\scheduler\\\\scheduler.js\";\nimport React, { Component } from \"react\";\nimport Year from \"../../components/Year\";\nimport Months from '../../components/Months';\nimport Weeks from '../../components/Weeks';\nimport WeekSchedule from '../../components/WeekSchedule';\nimport API from \"../../utils/API\"; // import { Col, Row, Container } from \"../../components/Grid\";\n\nimport { Col, Row, Container, Breadcrumb } from 'react-bootstrap';\n\nvar moment = require('moment');\n\nvar monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nvar months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nvar weeks = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52];\nvar years = [];\n\nfor (var i = 2015; i <= moment().format('YYYY'); i++) {\n  //TODO: update this to current year when done\n  years.push(i);\n}\n\nvar weekOfYear = function weekOfYear(month, year) {\n  return parseInt(moment(month + ' ' + year, \"M-YYYY\").week());\n};\n\nvar Scheduler =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Scheduler, _Component);\n\n  // Setting the initial state - the mneu will open to the current week\n  function Scheduler() {\n    var _this;\n\n    _classCallCheck(this, Scheduler);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Scheduler).call(this));\n\n    _this.findWeekSchedule = function (week, year) {\n      _this.pullSchedule(week, year, function (res) {\n        _this.setState({\n          week: res\n        }, function () {\n          console.table(_this.state.week);\n        });\n      });\n    };\n\n    _this.createEmptySchedule = function (week, year) {\n      API.createWeek(week, year, function (res) {\n        console.log('new week', res.data);\n\n        _this.findWeekSchedule(week, year);\n      });\n    };\n\n    _this.pullSchedule = function (week, year, callback) {\n      API.getWeek(week, year).then(function (res) {\n        res.data ? callback(res.data) : // console.log('creating empty schedule')\n        callback(_this.createEmptySchedule(week, year));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleClick = function (type, value) {\n      switch (type) {\n        case 'year':\n          if (value === parseInt(_this.state.selectedYear)) {\n            // sets state to nulll to collapse menu\n            _this.setState({\n              selectedYear: null,\n              selectedMonth: null,\n              selectedWeek: null\n            });\n          } else {\n            _this.setState({\n              selectedYear: value,\n              selectedMonth: null,\n              selectedWeek: null\n            });\n          }\n\n          break;\n\n        case 'month':\n          if (value === parseInt(_this.state.selectedMonth)) {\n            _this.setState({\n              selectedMonth: null,\n              selectedWeek: null\n            });\n          } else {\n            _this.setState({\n              selectedMonth: value,\n              selectedWeek: null\n            });\n          }\n\n          break;\n\n        case 'week':\n          if (value === parseInt(_this.state.selectedWeek)) {\n            _this.setState({\n              selectedWeek: null\n            });\n          } else {\n            _this.setState({\n              selectedWeek: value\n            });\n\n            _this.findWeekSchedule(value, _this.state.selectedYear);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.renderYears = function () {\n      return React.createElement(Breadcrumb, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, years.map(function (year) {\n        if (year === parseInt(_this.state.selectedYear)) {\n          return React.createElement(React.Fragment, {\n            key: \"activeYear\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, React.createElement(Year, {\n            key: year.toString(),\n            year: year,\n            handleClick: _this.handleClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }), _this.renderMonths(year));\n        }\n\n        return React.createElement(Year, {\n          key: year.toString(),\n          year: year,\n          handleClick: _this.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        });\n      }));\n    };\n\n    _this.renderMonths = function (year) {\n      return React.createElement(Breadcrumb, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, months.map(function (month) {\n        if (month === parseInt(_this.state.selectedMonth)) {\n          return React.createElement(React.Fragment, {\n            key: \"activeMonth\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167\n            },\n            __self: this\n          }, React.createElement(Months, {\n            key: month.toString(),\n            month: month,\n            handleClick: _this.handleClick,\n            monthNames: monthNames,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }), _this.renderWeeks(month, year));\n        } else {\n          return React.createElement(Months, {\n            key: month.toString(),\n            month: month,\n            handleClick: _this.handleClick,\n            monthNames: monthNames,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          });\n        }\n      }));\n    };\n\n    _this.state = {\n      selectedYear: moment().format('YYYY'),\n      selectedMonth: moment().format('M'),\n      selectedWeek: moment().format('W'),\n      week: null\n    };\n    _this.clickButton = _this.clickButton.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderSchedule = _this.renderSchedule.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Scheduler, [{\n    key: \"clickButton\",\n    value: function clickButton() {//test button at the top of the page\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.findWeekSchedule(this.state.selectedWeek, this.state.selectedYear);\n    } //pull that week's schedule then sets state\n\n  }, {\n    key: \"renderWeeks\",\n    value: function renderWeeks(month, year) {\n      var _this2 = this;\n\n      return React.createElement(Breadcrumb, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, weeks.map(function (week) {\n        if (week < weekOfYear(parseInt(month) + 1, year) && week >= weekOfYear(month, year)) {\n          if (week === parseInt(_this2.state.selectedWeek)) {\n            // console.log('this.state: ' + this.state)\n            // console.log('this.state.week.week: ' + this.state.week.week)\n            return React.createElement(Weeks, {\n              key: week.toString(),\n              week: week,\n              handleClick: _this2.handleClick,\n              weekDisplayStart: moment(week + ' ' + year, \"w-YYYY\").format('M/D/YY'),\n              weekDisplayEnd: moment(week + 1 + ' ' + year, \"w-YYYY\").format('M/D/YY'),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 202\n              },\n              __self: this\n            });\n          } else {\n            return React.createElement(Weeks, {\n              key: week.toString(),\n              week: week,\n              handleClick: _this2.handleClick,\n              weekDisplayStart: moment(week + ' ' + year, \"w-YYYY\").format('M/D/YY'),\n              weekDisplayEnd: moment(week + 1 + ' ' + year, \"w-YYYY\").format('M/D/YY'),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 212\n              },\n              __self: this\n            });\n          }\n        }\n\n        return null;\n      }));\n    }\n  }, {\n    key: \"renderSchedule\",\n    value: function renderSchedule() {\n      console.log('this.state.selectedWeek', this.state.selectedWeek);\n      console.log('this.state.week.week', this.state.week.week);\n      return this.state.selectedWeek && this.state.week ? this.state.selectedWeek === this.state.week.week ? React.createElement(WeekSchedule, {\n        key: this.state.week.toString() + 'sched',\n        week: this.state.week,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }) : 'Loading' : React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }); //TODO add a timeout to the 'loading'\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state)\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, this.renderYears(), this.renderSchedule())));\n    }\n  }]);\n\n  return Scheduler;\n}(Component);\n\nexport default Scheduler;","map":{"version":3,"sources":["c:\\Users\\Zach\\bc\\00-Homework\\Scheduler\\client\\src\\pages\\scheduler\\scheduler.js"],"names":["React","Component","Year","Months","Weeks","WeekSchedule","API","Col","Row","Container","Breadcrumb","moment","require","monthNames","months","weeks","years","i","format","push","weekOfYear","month","year","parseInt","week","Scheduler","findWeekSchedule","pullSchedule","res","setState","console","table","state","createEmptySchedule","createWeek","log","data","callback","getWeek","then","catch","err","handleClick","type","value","selectedYear","selectedMonth","selectedWeek","renderYears","map","toString","renderMonths","renderWeeks","clickButton","bind","renderSchedule"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Year from \"../../components/Year\";\nimport Months from '../../components/Months';\nimport Weeks from '../../components/Weeks';\nimport WeekSchedule from '../../components/WeekSchedule'\nimport API from \"../../utils/API\";\n// import { Col, Row, Container } from \"../../components/Grid\";\nimport { Col, Row, Container, Breadcrumb } from 'react-bootstrap'\nconst moment = require('moment')\n\nconst monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\nconst months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nconst weeks = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52]\n\nlet years = []\nfor (let i = 2015; i <= moment().format('YYYY'); i++) { //TODO: update this to current year when done\n  years.push(i);\n}\n\nconst weekOfYear = (month, year) => parseInt(moment(month + ' ' + year, \"M-YYYY\").week())\n\n\nclass Scheduler extends Component {\n  // Setting the initial state - the mneu will open to the current week\n  constructor() {\n    super();\n    this.state = {\n      selectedYear: moment().format('YYYY'),\n      selectedMonth: moment().format('M'),\n      selectedWeek: moment().format('W'),\n      week: null\n    }\n    this.clickButton = this.clickButton.bind(this)\n    this.renderSchedule = this.renderSchedule.bind(this)\n  }\n\n  clickButton() { //test button at the top of the page\n\n  };\n\n  componentDidMount() {\n    this.findWeekSchedule(this.state.selectedWeek, this.state.selectedYear)\n  }\n\n\n  //pull that week's schedule then sets state\n  findWeekSchedule = (week, year) => {\n    this.pullSchedule(week, year, res => {\n      this.setState({\n        week: res,\n      },\n        () => { console.table(this.state.week) }\n      )\n    })\n  }\n\n  createEmptySchedule = (week, year) => {\n    API.createWeek(week, year, res => {\n      console.log('new week', res.data)\n      this.findWeekSchedule(week, year);\n    })\n  }\n\n  //pullSchedule is used when a week is clicked on. It pulls that week's schedule from Mongo and returns via callback\n  pullSchedule = (week, year, callback) => {\n    API.getWeek(week, year)\n      .then(res => {\n        res.data ?\n          callback(res.data)\n          :\n          // console.log('creating empty schedule')\n          callback(\n            this.createEmptySchedule(week, year)\n          )\n\n\n      })\n      .catch(err => console.log(err))\n  }\n\n  //handles clicks on year, month, or weeks\n  handleClick = (type, value) => {\n    switch (type) {\n      case 'year':\n        if (value === parseInt(this.state.selectedYear)) {\n          // sets state to nulll to collapse menu\n          this.setState({\n            selectedYear: null,\n            selectedMonth: null,\n            selectedWeek: null\n          })\n        } else {\n          this.setState({\n            selectedYear: value,\n            selectedMonth: null,\n            selectedWeek: null\n          })\n        }\n        break;\n\n      case 'month':\n        if (value === parseInt(this.state.selectedMonth)) {\n          this.setState({\n            selectedMonth: null,\n            selectedWeek: null\n          })\n        } else {\n          this.setState({\n            selectedMonth: value,\n            selectedWeek: null\n          })\n        }\n        break;\n\n      case 'week':\n        if (value === parseInt(this.state.selectedWeek)) {\n          this.setState({\n            selectedWeek: null\n          })\n        } else {\n          this.setState({\n            selectedWeek: value\n          })\n          this.findWeekSchedule(value, this.state.selectedYear)\n        }\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  renderYears = () => {\n    return (\n      <Breadcrumb>\n      {years.map(year => {\n      if (year === parseInt(this.state.selectedYear)) {\n        return (\n          <React.Fragment key = 'activeYear'>\n            <Year\n              key={year.toString()}\n              year={year}\n              handleClick={this.handleClick}\n            />\n            {this.renderMonths(year)}\n          </React.Fragment>\n        )\n      }\n      return (\n        <Year\n          key={year.toString()}\n          year={year}\n          handleClick={this.handleClick}\n        />\n      )\n    })}\n    </Breadcrumb>\n    )\n  }\n\n  renderMonths = year => {\n    return (\n      <Breadcrumb>\n      {months.map(month => {\n      if (month === parseInt(this.state.selectedMonth)) {\n        return (\n          <React.Fragment key = 'activeMonth'>\n            <Months\n              key={month.toString()}\n              month={month}\n              handleClick={this.handleClick}\n              monthNames={monthNames}\n            />\n            {this.renderWeeks(month, year)}\n          </React.Fragment>\n        )\n      } else {\n        return (\n          <Months\n            key={month.toString()}\n            month={month}\n            handleClick={this.handleClick}\n            monthNames={monthNames}\n          />\n        )\n      }\n    })}\n    </Breadcrumb>\n    )\n\n  }\n\n  renderWeeks(month, year) {\n    return (\n      <Breadcrumb>\n      {weeks.map(week => {\n      if (week < weekOfYear((parseInt(month) + 1), year) && week >= weekOfYear(month, year)) {\n        if (week === parseInt(this.state.selectedWeek)) {\n          // console.log('this.state: ' + this.state)\n          // console.log('this.state.week.week: ' + this.state.week.week)\n          return (\n              <Weeks\n                key={week.toString()}\n                week={week}\n                handleClick={this.handleClick}\n                weekDisplayStart={moment(week + ' ' + year, \"w-YYYY\").format('M/D/YY')}\n                weekDisplayEnd={moment((week + 1) + ' ' + year, \"w-YYYY\").format('M/D/YY')}\n              />\n          )\n        } else {\n          return (\n            <Weeks\n              key={week.toString()}\n              week={week}\n              handleClick={this.handleClick}\n              weekDisplayStart={moment(week + ' ' + year, \"w-YYYY\").format('M/D/YY')}\n              weekDisplayEnd={moment((week + 1) + ' ' + year, \"w-YYYY\").format('M/D/YY')}\n            />\n          )\n        }\n      }\n      return (null)\n    })}\n    </Breadcrumb>\n    )\n  }\n\n  renderSchedule(){\n    console.log('this.state.selectedWeek', this.state.selectedWeek)\n    console.log('this.state.week.week', this.state.week.week)\n    return (this.state.selectedWeek && this.state.week) ?\n      (this.state.selectedWeek === this.state.week.week)?\n        <WeekSchedule\n          key={(this.state.week.toString() + 'sched')}\n          week={this.state.week}\n        />\n        :\n        'Loading'\n      :\n      <br/> //TODO add a timeout to the 'loading'\n    \n  }\n\n  render() {\n    // console.log(this.state)\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6 sm-12\">\n            {this.renderYears()}\n            {this.renderSchedule()}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Scheduler;\n"]},"metadata":{},"sourceType":"module"}