{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { sessionService } from 'redux-react-session';\nimport Scheduler from \"./pages/scheduler\";\nimport Nav from \"./components/Nav\";\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport PrivateRoute from './components/PrivateRoute'; // function App({ authenticated, checked }) {\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      loggedIn: false,\n      user: null\n    };\n    _this.logIn = _this.logIn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUser();\n    }\n  }, {\n    key: \"getUser\",\n    value: function getUser() {\n      var _this2 = this;\n\n      axios.get('/api/auth/user').then(function (response) {\n        console.log('Get user response: ', response.data);\n\n        if (response.data.user) {\n          console.log('Get User: There is a user saved in the server session: ');\n\n          _this2.setState({\n            loggedIn: true,\n            user: response.data.user.username\n          });\n        } else {\n          console.log('Get user: no user');\n\n          _this2.setState({\n            loggedIn: false,\n            user: null\n          });\n        }\n      });\n    }\n  }, {\n    key: \"logIn\",\n    value: function logIn(username) {\n      sessionStorage.setItem('loggedIn', true);\n      console.log('session storage', sessionStorage.getItem('loggedIn'));\n      this.setState({\n        user: username,\n        loggedIn: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Router, {\n        path: \"/\",\n        component: App,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Route, {\n        onEnter: sessionService.checkAuth,\n        component: Scheduler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Router, {\n        path: \"/login\",\n        component: Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component); // const App = ({ authenticated}) => (\n//   <Router>\n//       <div>\n//         <Nav />\n//         <Switch>\n//           <Route exact path='/signup' component={SignUp} />\n//           <Route exact path='/login' render={(props) => <Login  {...props} logIn={this.logIn} />} />\n//           <PrivateRoute exact path='/' component={Scheduler} authenticated={authenticated} />\n//         </Switch>\n//       </div>\n//   </Router>\n// );\n// const App = ({ authenticated, checked }) => (\n//   <Router>\n//     { checked &&\n//       <div>\n//         <PrivateRoute exact path=\"/\" component={Scheduler} authenticated={authenticated}/>\n//         <Route path=\"/login\" component={Login}/>\n//       </div>\n//     }\n//   </Router>\n// );\n\n\nexport default App; // export default App","map":{"version":3,"sources":["c:\\Users\\Zach\\bc\\00-Homework\\Scheduler\\client\\src\\App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","connect","sessionService","Scheduler","Nav","SignUp","Login","PrivateRoute","App","state","loggedIn","user","logIn","bind","getUser","axios","get","then","response","console","log","data","setState","username","sessionStorage","setItem","getItem","checkAuth"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB,C,CAEA;;IACQC,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAKA,UAAKC,KAAL,GAAa,MAAKA,KAAL,CAAWC,IAAX,uDAAb;AAPY;AAQb;;;;wCAEkB;AACjB,WAAKC,OAAL;AACD;;;8BAEQ;AAAA;;AACPC,MAAAA,KAAK,CAACC,GAAN,CAAU,gBAAV,EAA4BC,IAA5B,CAAiC,UAAAC,QAAQ,EAAI;AAC3CC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,QAAQ,CAACG,IAA5C;;AACA,YAAIH,QAAQ,CAACG,IAAT,CAAcV,IAAlB,EAAwB;AACtBQ,UAAAA,OAAO,CAACC,GAAR,CAAY,yDAAZ;;AAEA,UAAA,MAAI,CAACE,QAAL,CAAc;AACZZ,YAAAA,QAAQ,EAAE,IADE;AAEZC,YAAAA,IAAI,EAAEO,QAAQ,CAACG,IAAT,CAAcV,IAAd,CAAmBY;AAFb,WAAd;AAID,SAPD,MAOO;AACLJ,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,UAAA,MAAI,CAACE,QAAL,CAAc;AACZZ,YAAAA,QAAQ,EAAE,KADE;AAEZC,YAAAA,IAAI,EAAE;AAFM,WAAd;AAID;AACF,OAhBD;AAiBD;;;0BAEKY,Q,EAAU;AACdC,MAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmC,IAAnC;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BI,cAAc,CAACE,OAAf,CAAuB,UAAvB,CAA/B;AACA,WAAKJ,QAAL,CAAc;AACZX,QAAAA,IAAI,EAAEY,QADM;AAEZb,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAID;;;6BAGQ;AACP,aACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,GAAd;AAAkB,QAAA,SAAS,EAAIF,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAIN,cAAc,CAACyB,SAAjC;AAA6C,QAAA,SAAS,EAAIxB,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAG,QAAf;AAAwB,QAAA,SAAS,EAAIG,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF;AAWD;;;;EAzDeV,S,GA2DlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKF,eAAeY,GAAf,C,CACA","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { sessionService } from 'redux-react-session'\nimport Scheduler from \"./pages/scheduler\";\nimport Nav from \"./components/Nav\";\nimport SignUp from './components/SignUp'\nimport Login from './components/Login'\nimport PrivateRoute from './components/PrivateRoute'\n\n// function App({ authenticated, checked }) {\n  class App extends Component {\n    constructor() {\n      super()\n      this.state = {\n        loggedIn: false,\n        user: null\n      }\n\n      this.logIn = this.logIn.bind(this)\n    }\n\n    componentDidMount(){\n      this.getUser()\n    }\n\n    getUser(){\n      axios.get('/api/auth/user').then(response => {\n        console.log('Get user response: ', response.data)\n        if (response.data.user) {\n          console.log('Get User: There is a user saved in the server session: ')\n  \n          this.setState({\n            loggedIn: true,\n            user: response.data.user.username\n          })\n        } else {\n          console.log('Get user: no user');\n          this.setState({\n            loggedIn: false,\n            user: null\n          })\n        }\n      })\n    }\n    \n    logIn(username) {\n      sessionStorage.setItem('loggedIn', true);\n      console.log('session storage', sessionStorage.getItem('loggedIn'))\n      this.setState({\n        user: username,\n        loggedIn: true\n      })\n    }\n\n\n    render() {\n      return (\n        <Router path ='/' component = {App}>\n          <React.Fragment>\n            <Route onEnter = {sessionService.checkAuth}  component = {Scheduler}/>\n            <Router path = '/login' component = {Login} />\n              {/* <Route exact path='/signup' component={SignUp} />\n              <Route exact path='/login' render={(props) => <Login  {...props} logIn={this.logIn} />} />\n              <PrivateRoute exact path='/' component={Scheduler} authenticated={authenticated} /> */}\n          </React.Fragment>\n        </Router>\n      );\n    }\n  }\n  // const App = ({ authenticated}) => (\n\n  //   <Router>\n  //       <div>\n  //         <Nav />\n  //         <Switch>\n  //           <Route exact path='/signup' component={SignUp} />\n  //           <Route exact path='/login' render={(props) => <Login  {...props} logIn={this.logIn} />} />\n  //           <PrivateRoute exact path='/' component={Scheduler} authenticated={authenticated} />\n  //         </Switch>\n  //       </div>\n  //   </Router>\n  // );\n  // const App = ({ authenticated, checked }) => (\n  //   <Router>\n  //     { checked &&\n  //       <div>\n  //         <PrivateRoute exact path=\"/\" component={Scheduler} authenticated={authenticated}/>\n  //         <Route path=\"/login\" component={Login}/>\n  //       </div>\n  //     }\n  //   </Router>\n  // );\n\n\n\n\nexport default App;\n// export default App\n"]},"metadata":{},"sourceType":"module"}