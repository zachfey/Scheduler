{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\src\\\\components\\\\WeekSchedule\\\\weekSchedule.js\";\nimport React, { Component } from \"react\";\nimport Row from '../Row';\n\nvar moment = require('moment');\n\nvar dayArray = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\nvar WeekSchedule =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeekSchedule, _Component);\n\n  function WeekSchedule(props) {\n    var _this;\n\n    _classCallCheck(this, WeekSchedule);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WeekSchedule).call(this, props));\n    _this.state = {\n      //TODO change this from state to database query\n      week: _this.props.week || {}\n    };\n    return _this;\n  }\n\n  _createClass(WeekSchedule, [{\n    key: \"populateDates\",\n    value: function populateDates(week, year) {\n      //returns an array with each date of the given week (e.g. 1-Jul, 2-Jul, 3-Jul, etc.)\n      var date = moment(week + ' ' + year, \"w-YYYY\").format('D-MMM');\n      var dateArray = [];\n\n      for (var i = 1; i < 8; i++) {\n        dateArray.push(moment(date).add(i, 'day').format('D-MMM'));\n      }\n\n      return dateArray;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state.week.rows)\n      return React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), dayArray.map(function (day) {\n        return React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, day);\n      })), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), this.populateDates(this.state.week.week, this.state.week.year).map(function (date) {\n        return React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, date);\n      })), this.state.week.rows.map(function (row) {\n        return React.createElement(Row, {\n          row: row,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return WeekSchedule;\n}(Component);\n\nexport default WeekSchedule;","map":{"version":3,"sources":["C:\\Users\\Zach\\bc\\00-Homework\\Scheduler\\client\\src\\components\\WeekSchedule\\weekSchedule.js"],"names":["React","Component","Row","moment","require","dayArray","WeekSchedule","props","state","week","year","date","format","dateArray","i","push","add","map","day","populateDates","rows","row"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,IAAMC,QAAQ,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,QAA/C,EAAyD,UAAzD,EAAqE,QAArE,CAAjB;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAE;AACXC,MAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWE,IAAX,IAAmB;AADhB,KAAb;AAFe;AAKlB;;;;kCAGaA,I,EAAMC,I,EAAM;AAAE;AACxB,UAAMC,IAAI,GAAGR,MAAM,CAACM,IAAI,GAAG,GAAP,GAAaC,IAAd,EAAoB,QAApB,CAAN,CAAoCE,MAApC,CAA2C,OAA3C,CAAb;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBD,QAAAA,SAAS,CAACE,IAAV,CAAeZ,MAAM,CAACQ,IAAD,CAAN,CAAaK,GAAb,CAAiBF,CAAjB,EAAoB,KAApB,EAA2BF,MAA3B,CAAkC,OAAlC,CAAf;AACH;;AACD,aAAOC,SAAP;AACH;;;6BAEQ;AACL;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEKR,QAAQ,CAACY,GAAT,CAAa,UAAAC,GAAG;AAAA,eAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,GAAL,CAAJ;AAAA,OAAhB,CAFL,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEK,KAAKC,aAAL,CAAmB,KAAKX,KAAL,CAAWC,IAAX,CAAgBA,IAAnC,EAAyC,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,IAAzD,EAA+DO,GAA/D,CAAmE,UAAAN,IAAI;AAAA,eAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAL,CAAJ;AAAA,OAAvE,CAFL,CALJ,EASK,KAAKH,KAAL,CAAWC,IAAX,CAAgBW,IAAhB,CAAqBH,GAArB,CAAyB,UAAAI,GAAG,EAAI;AAC7B,eACI,oBAAC,GAAD;AACI,UAAA,GAAG,EAAEA,GADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,OANA,CATL,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,CADJ,CADJ;AAwBH;;;;EA5CsBpB,S;;AAgD3B,eAAeK,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Row from '../Row';\nconst moment = require('moment')\n\nconst dayArray = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\nclass WeekSchedule extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { //TODO change this from state to database query\n            week: this.props.week || {}        \n        }\n    }\n\n\n    populateDates(week, year) { //returns an array with each date of the given week (e.g. 1-Jul, 2-Jul, 3-Jul, etc.)\n        const date = moment(week + ' ' + year, \"w-YYYY\").format('D-MMM')\n        let dateArray = []\n        for (let i = 1; i < 8; i++) {\n            dateArray.push(moment(date).add(i, 'day').format('D-MMM'))\n        }\n        return dateArray \n    }\n\n    render() {\n        // console.log(this.state.week.rows)\n        return (\n            <table>\n                <tbody>\n                    <tr>\n                        <th></th>\n                        {dayArray.map(day => <th>{day}</th>)}\n                    </tr>\n                    <tr>\n                        <th></th>\n                        {this.populateDates(this.state.week.week, this.state.week.year).map(date => <th>{date}</th>)}\n                    </tr>\n                    {this.state.week.rows.map(row => {\n                        return (\n                            <Row\n                                row={row}\n                            />\n                        )\n                    })}\n                    <tr>\n\n                    </tr>\n                </tbody>\n            </table >\n        )\n    }\n\n}\n\nexport default WeekSchedule;\n"]},"metadata":{},"sourceType":"module"}