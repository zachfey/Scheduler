{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  // Gets all books\n  getAll: function getAll() {\n    return axios.get(\"/api/rows\").catch(function (err) {\n      return console.log(err);\n    });\n  },\n  // Gets the schedule based on week and year\n  getWeek: function getWeek(week, year) {\n    return axios.get(\"/api/rows/\" + year + '/' + week).catch(function (err) {\n      return console.log(err);\n    });\n  },\n  updateWeek: function updateWeek(weekSched, cb) {\n    // console.log('inside API updateWeek')\n    // console.table(weekSched)\n    return axios.put(\"/api/rows/update\", weekSched).then(function (res) {\n      cb(res);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  },\n  // // Deletes the book with the given id\n  // deleteBook: function(id) {\n  //   return axios.delete(\"/api/books/\" + id);\n  // },\n  // // Saves a book to the database\n  // saveBook: function(bookData) {\n  //   return axios.post(\"/api/books\", bookData);\n  // }\n  login: function login(user) {\n    var repsonse = {\n      token: '1a2b3c4d',\n      data: {\n        email: user.email,\n        firstName: 'test',\n        lastName: 'test'\n      }\n    };\n    return new Promise(function (resolve) {\n      return setTimeout(resolve(response), 1000);\n    });\n  },\n  logout: function logout() {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, 1000);\n    });\n  }\n};","map":{"version":3,"sources":["c:\\Users\\Zach\\bc\\00-Homework\\Scheduler\\client\\src\\utils\\API.js"],"names":["axios","getAll","get","catch","err","console","log","getWeek","week","year","updateWeek","weekSched","cb","put","then","res","login","user","repsonse","token","data","email","firstName","lastName","Promise","resolve","setTimeout","response","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACb;AACAC,EAAAA,MAAM,EAAE,kBAAW;AACjB,WAAOD,KAAK,CAACE,GAAN,CAAU,WAAV,EACJC,KADI,CACE,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KADL,CAAP;AAED,GALY;AAMb;AACAG,EAAAA,OAAO,EAAE,iBAASC,IAAT,EAAeC,IAAf,EAAqB;AAC5B,WAAOT,KAAK,CAACE,GAAN,CAAU,eAAeO,IAAf,GAAsB,GAAtB,GAA4BD,IAAtC,EACJL,KADI,CACE,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KADL,CAAP;AAED,GAVY;AAYbM,EAAAA,UAAU,EAAE,oBAASC,SAAT,EAAoBC,EAApB,EAAuB;AACjC;AACA;AACA,WAAOZ,KAAK,CAACa,GAAN,CAAU,kBAAV,EAA8BF,SAA9B,EACJG,IADI,CACC,UAAAC,GAAG,EAAI;AACXH,MAAAA,EAAE,CAACG,GAAD,CAAF;AACD,KAHI,EAIJZ,KAJI,CAIE,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAJL,CAAP;AAKD,GApBY;AAqBb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAY,EAAAA,KAAK,EAAE,eAASC,IAAT,EAAc;AACnB,QAAMC,QAAQ,GAAG;AACfC,MAAAA,KAAK,EAAE,UADQ;AAEfC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KADR;AAEJC,QAAAA,SAAS,EAAE,MAFP;AAGJC,QAAAA,QAAQ,EAAE;AAHN;AAFS,KAAjB;AAQA,WAAO,IAAIC,OAAJ,CAAa,UAAAC,OAAO;AAAA,aAAIC,UAAU,CAACD,OAAO,CAACE,QAAD,CAAR,EAAoB,IAApB,CAAd;AAAA,KAApB,CAAP;AACD,GAxCY;AA0CbC,EAAAA,MAAM,EAAE,kBAAU;AAChB,WAAO,IAAIJ,OAAJ,CAAa,UAAAC,OAAO;AAAA,aAAIC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAd;AAAA,KAApB,CAAP;AACD;AA5CY,CAAf","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getAll: function() {\n    return axios.get(\"/api/rows\")\n      .catch(err => console.log(err))\n  },\n  // Gets the schedule based on week and year\n  getWeek: function(week, year) {\n    return axios.get(\"/api/rows/\" + year + '/' + week)\n      .catch(err => console.log(err))\n  },\n\n  updateWeek: function(weekSched, cb){\n    // console.log('inside API updateWeek')\n    // console.table(weekSched)\n    return axios.put(\"/api/rows/update\", weekSched)\n      .then(res => {\n        cb(res);\n      })\n      .catch(err => console.log(err))\n  },\n  // // Deletes the book with the given id\n  // deleteBook: function(id) {\n  //   return axios.delete(\"/api/books/\" + id);\n  // },\n  // // Saves a book to the database\n  // saveBook: function(bookData) {\n  //   return axios.post(\"/api/books\", bookData);\n  // }\n\n  login: function(user){\n    const repsonse = {\n      token: '1a2b3c4d',\n      data: {\n        email: user.email,\n        firstName: 'test',\n        lastName: 'test'\n      }\n    };\n    return new Promise (resolve => setTimeout(resolve(response), 1000));\n  },\n\n  logout: function(){\n    return new Promise (resolve => setTimeout(resolve, 1000))\n  }\n};\n"]},"metadata":{},"sourceType":"module"}