{"ast":null,"code":"import _defineProperty from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\src\\\\components\\\\RowDetail\\\\rowDetail.js\";\nimport React, { Component } from \"react\";\nimport '../table.css';\nimport { Button } from 'react-bootstrap';\n\nvar RowDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RowDetail, _Component);\n\n  function RowDetail(props) {\n    var _this;\n\n    _classCallCheck(this, RowDetail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RowDetail).call(this, props));\n    _this.state = {\n      category: 'detail',\n      rowIndex: props.rowindex,\n      dayIndex: props.dayindex,\n      numGuests: props.numguests,\n      guides: props.guides,\n      edited: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleArrayChange = _this.handleArrayChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveChanges = _this.saveChanges.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addSubtractRows = _this.addSubtractRows.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RowDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.addSubtractRows();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.addSubtractRows();\n    }\n  }, {\n    key: \"addSubtractRows\",\n    value: function addSubtractRows() {\n      var newGuides = this.state.guides;\n\n      if (newGuides.slice(-1)[0] !== '' && newGuides.slice(-2)[0] !== '') {\n        newGuides.push('');\n        console.log('addsubtractrows update state top');\n        this.setState({\n          guides: newGuides\n        });\n      } else {\n        //if the last spot is empty\n        if (newGuides.slice(-2)[0] === '' && newGuides.length > 1) {\n          //check if the second to last spot is empty\n          console.log('second to last empty', newGuides.slice(-2)[0]);\n          newGuides.pop();\n          console.log('addsubtractrows update state');\n          this.setState({\n            guides: newGuides\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _this$setState;\n\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, \"edited\", true), _this$setState));\n    }\n  }, {\n    key: \"handleArrayChange\",\n    value: function handleArrayChange(event) {\n      //TODO add ability to add row\n      var _event$target2 = event.target,\n          name = _event$target2.name,\n          value = _event$target2.value;\n      var index = parseInt(name);\n      var newGuides = this.state.guides.map(function (guide, i) {\n        return i === index ? value : guide;\n      }); // this.props.onArrayChange(this.props.id, 'guides', newGuides)\n\n      this.setState({\n        guides: newGuides,\n        edited: true\n      });\n    }\n  }, {\n    key: \"saveChanges\",\n    value: function saveChanges() {\n      var _this2 = this;\n\n      if (this.state.edited) {\n        this.props.saveChanges(this.state, function () {\n          return _this2.setState({\n            edited: false\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var guides = this.state.guides;\n      return React.createElement(\"td\", {\n        className: this.state.edited ? 'edited data' : 'original data',\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Num Guests\"), React.createElement(\"input\", {\n        value: this.state.numGuests,\n        name: \"numGuests\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Guides\"), guides.map(function (guide, index) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          value: guide,\n          name: index,\n          onChange: _this3.handleArrayChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }));\n      }), this.state.edited ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"saveChanges\",\n        onClick: this.saveChanges,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Save\")) : React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RowDetail;\n}(Component);\n\nexport default RowDetail;","map":{"version":3,"sources":["c:\\Users\\Zach\\bc\\00-Homework\\Scheduler\\client\\src\\components\\RowDetail\\rowDetail.js"],"names":["React","Component","Button","RowDetail","props","state","category","rowIndex","rowindex","dayIndex","dayindex","numGuests","numguests","guides","edited","handleChange","bind","handleArrayChange","saveChanges","addSubtractRows","newGuides","slice","push","console","log","setState","length","pop","event","target","name","value","index","parseInt","map","guide","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport '../table.css';\nimport { Button } from 'react-bootstrap'\n\nclass RowDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: 'detail',\n            rowIndex: props.rowindex,\n            dayIndex: props.dayindex,\n            numGuests: props.numguests,\n            guides: props.guides,\n            edited: false\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleArrayChange = this.handleArrayChange.bind(this);\n        this.saveChanges = this.saveChanges.bind(this);\n        this.addSubtractRows = this.addSubtractRows.bind(this);\n    }\n\n    componentDidMount(){\n        this.addSubtractRows()\n    }\n\n    componentDidUpdate() {\n        this.addSubtractRows()\n    }\n\n    addSubtractRows() {\n        let newGuides = this.state.guides;\n        if (newGuides.slice(-1)[0] !== '' && newGuides.slice(-2)[0] !== '') {\n            newGuides.push('')\n            console.log('addsubtractrows update state top')\n            this.setState({ guides: newGuides })\n        } else { //if the last spot is empty\n            if (newGuides.slice(-2)[0] === '' && newGuides.length > 1) { //check if the second to last spot is empty\n                console.log('second to last empty', newGuides.slice(-2)[0])\n                newGuides.pop()\n                console.log('addsubtractrows update state')\n                this.setState({ guides: newGuides })\n            }\n        }\n    }\n\n    handleChange(event) {\n        const { name, value } = event.target;\n        this.setState({ [name]: value, edited: true })\n    }\n\n    handleArrayChange(event) { //TODO add ability to add row\n        const { name, value } = event.target\n        const index = parseInt(name)\n        const newGuides = this.state.guides.map((guide, i) => {\n            return (i === index ? value : guide)\n        });\n        // this.props.onArrayChange(this.props.id, 'guides', newGuides)\n        this.setState({ guides: newGuides, edited: true })\n    }\n\n    saveChanges() {\n        if (this.state.edited) {\n            this.props.saveChanges(this.state, () => this.setState({ edited: false }))\n        }\n    }\n\n    render() {\n        const guides = this.state.guides\n        return (\n            < td className={this.state.edited ? 'edited data' : 'original data'} align = 'center'>\n                <h4>Num Guests</h4>\n                <input\n                    value={this.state.numGuests}\n                    name=\"numGuests\"\n                    onChange={this.handleChange}\n                />\n                <br/>\n                <br/>\n                <h4>Guides</h4>\n                {\n                    guides.map((guide, index) => {\n                        return (\n                            <React.Fragment>\n                                <input\n                                    value={guide}\n                                    name={index}\n                                    onChange={this.handleArrayChange}\n                                />\n                                <br />\n                            </React.Fragment>\n                        )\n                    })\n                }\n                {this.state.edited?\n                <React.Fragment>\n                    <br/>\n                    <br/>\n                    <Button \n                        className = 'saveChanges'\n                        onClick = {this.saveChanges}\n                    >Save</Button>\n                </React.Fragment>\n                :\n                <br/>\n                }\n            </td >\n        )\n    }\n}\n\nexport default RowDetail;\n"]},"metadata":{},"sourceType":"module"}