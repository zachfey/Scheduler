{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\src\\\\App.js\";\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport Scheduler from \"./pages/scheduler\";\nimport Nav from \"./components/Nav\";\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport PrivateRoute from './components/PrivateRoute'; // function App({ authenticated, checked }) {\n// class App extends Component {\n//   constructor() {\n//     super()\n//     this.state = {\n//       loggedIn: sessionStorage.getItem('loggedIn') || false,\n//       user: null\n//     }\n//     this.logIn = this.logIn.bind(this)\n//   }\n// logIn(username){\n//   sessionStorage.setItem('loggedIn', true);\n//   console.log('session storage', sessionStorage.getItem('loggedIn'))\n//   this.setState({\n//     user: username,\n//     loggedIn: true\n//   })\n// }\n// render() {\n//   console.log('back to app', this.state)\n//   return (\n//     <Router>\n//       {/* {checked && */}\n//         <div>\n//           <Nav />\n//           <Switch>\n//             <Route exact path='/signup' component={SignUp} />\n//             <Route exact path='/login' render={(props) => <Login  {...props} logIn={this.logIn} />} />\n//             <PrivateRoute exact path='/' component={Scheduler} authenticated={authenticated} />\n//           </Switch>\n//         </div>\n//       {/* } */}\n//     </Router>\n//   );\n// }\n\nvar App = function App(_ref) {\n  var authenticated = _ref.authenticated;\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/signup\",\n    component: SignUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: function render(props) {\n      return React.createElement(Login, Object.assign({}, props, {\n        logIn: _this.logIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/\",\n    component: Scheduler,\n    authenticated: authenticated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))));\n}; // const App = ({ authenticated, checked }) => (\n//   <Router>\n//     { checked &&\n//       <div>\n//         <PrivateRoute exact path=\"/\" component={Scheduler} authenticated={authenticated}/>\n//         <Route path=\"/login\" component={Login}/>\n//       </div>\n//     }\n//   </Router>\n// );\n\n\nvar mapState = function mapState(_ref2) {\n  var session = _ref2.session;\n  return {\n    checked: session.checked,\n    authenticated: session.authenticated\n  };\n};\n\nexport default App; // export default App","map":{"version":3,"sources":["c:\\Users\\Zach\\bc\\00-Homework\\Scheduler\\client\\src\\App.js"],"names":["React","BrowserRouter","Router","Route","Switch","connect","Scheduler","Nav","SignUp","Login","PrivateRoute","App","authenticated","props","logIn","mapState","session","checked"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,MAAGC,aAAH,QAAGA,aAAH;AAAA,SAEV,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,SAAS,EAAEJ,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,MAAM,EAAE,gBAACK,KAAD;AAAA,aAAW,oBAAC,KAAD,oBAAYA,KAAZ;AAAmB,QAAA,KAAK,EAAE,KAAI,CAACC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;AAAA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,IAAI,EAAC,GAAzB;AAA6B,IAAA,SAAS,EAAER,SAAxC;AAAmD,IAAA,aAAa,EAAEM,aAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFF,CADJ,CAFU;AAAA,CAAZ,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAMG,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,OAAH,SAAGA,OAAH;AAAA,SAAkB;AACjCC,IAAAA,OAAO,EAAED,OAAO,CAACC,OADgB;AAEjCL,IAAAA,aAAa,EAAEI,OAAO,CAACJ;AAFU,GAAlB;AAAA,CAAjB;;AAMA,eAAeD,GAAf,C,CACA","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport Scheduler from \"./pages/scheduler\";\nimport Nav from \"./components/Nav\";\nimport SignUp from './components/SignUp'\nimport Login from './components/Login'\nimport PrivateRoute from './components/PrivateRoute'\n\n// function App({ authenticated, checked }) {\n// class App extends Component {\n//   constructor() {\n//     super()\n//     this.state = {\n//       loggedIn: sessionStorage.getItem('loggedIn') || false,\n//       user: null\n//     }\n\n//     this.logIn = this.logIn.bind(this)\n//   }\n\n// logIn(username){\n//   sessionStorage.setItem('loggedIn', true);\n//   console.log('session storage', sessionStorage.getItem('loggedIn'))\n//   this.setState({\n//     user: username,\n//     loggedIn: true\n//   })\n// }\n\n// render() {\n//   console.log('back to app', this.state)\n//   return (\n//     <Router>\n//       {/* {checked && */}\n//         <div>\n//           <Nav />\n//           <Switch>\n//             <Route exact path='/signup' component={SignUp} />\n//             <Route exact path='/login' render={(props) => <Login  {...props} logIn={this.logIn} />} />\n//             <PrivateRoute exact path='/' component={Scheduler} authenticated={authenticated} />\n//           </Switch>\n//         </div>\n//       {/* } */}\n//     </Router>\n//   );\n// }\n\nconst App = ({ authenticated}) => (\n\n  <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path='/signup' component={SignUp} />\n          <Route exact path='/login' render={(props) => <Login  {...props} logIn={this.logIn} />} />\n          <PrivateRoute exact path='/' component={Scheduler} authenticated={authenticated} />\n        </Switch>\n      </div>\n  </Router>\n);\n// const App = ({ authenticated, checked }) => (\n//   <Router>\n//     { checked &&\n//       <div>\n//         <PrivateRoute exact path=\"/\" component={Scheduler} authenticated={authenticated}/>\n//         <Route path=\"/login\" component={Login}/>\n//       </div>\n//     }\n//   </Router>\n// );\n\n\nconst mapState = ({ session }) => ({\n  checked: session.checked,\n  authenticated: session.authenticated\n});\n\n\nexport default App;\n// export default App\n"]},"metadata":{},"sourceType":"module"}