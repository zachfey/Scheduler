{"ast":null,"code":"import _defineProperty from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\src\\\\components\\\\WeekSchedule\\\\weekSchedule.js\";\nimport React, { Component } from \"react\";\nimport Row from '../Row';\nimport { Table } from 'react-bootstrap';\nimport API from '../../utils/API';\n\nvar moment = require('moment');\n\nvar dayArray = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\nvar WeekSchedule =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeekSchedule, _Component);\n\n  function WeekSchedule(props) {\n    var _this;\n\n    _classCallCheck(this, WeekSchedule);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WeekSchedule).call(this, props));\n    _this.state = {\n      //TODO change this from state to database query\n      weekSchedule: _this.props.week || {}\n    };\n    _this.updateSchedule = _this.updateSchedule.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(WeekSchedule, [{\n    key: \"populateDates\",\n    value: function populateDates(week, year) {\n      //returns an array with each date of the given week (e.g. 1-Jul, 2-Jul, 3-Jul, etc.)\n      var date = moment(week + ' ' + year, \"w-YYYY\").format('D-MMM');\n      var dateArray = [];\n\n      for (var i = 1; i < 8; i++) {\n        dateArray.push(moment(date).add(i, 'day').format('D-MMM'));\n      }\n\n      return dateArray;\n    }\n  }, {\n    key: \"updateSchedule\",\n    value: function updateSchedule() {\n      API.updateWeek(this.state.weekSchedule);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleArrayChange\",\n    value: function handleArrayChange(event) {\n      //TODO add ability to add row\n      var _event$target2 = event.target,\n          name = _event$target2.name,\n          value = _event$target2.value;\n      var index = parseInt(name);\n      var newGuides = this.state.guides.map(function (guide, i) {\n        return i === index ? value : guide;\n      });\n      this.setState({\n        guides: newGuides\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log(this.state.week.rows)\n      return React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.updateSchedule,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Click me\")), dayArray.map(function (day) {\n        return React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, day);\n      })), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), this.populateDates(this.state.weekSchedule.week, this.state.weekSchedule.year).map(function (date) {\n        return React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, date);\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.state.weekSchedule.rows.map(function (row) {\n        return React.createElement(Row, {\n          row: row,\n          handleArrayChange: _this2.state.handleArrayChange,\n          handleChange: _this2.state.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      }), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return WeekSchedule;\n}(Component);\n\nexport default WeekSchedule;","map":{"version":3,"sources":["c:\\Users\\Zach\\bc\\00-Homework\\Scheduler\\client\\src\\components\\WeekSchedule\\weekSchedule.js"],"names":["React","Component","Row","Table","API","moment","require","dayArray","WeekSchedule","props","state","weekSchedule","week","updateSchedule","bind","year","date","format","dateArray","i","push","add","updateWeek","event","target","name","value","setState","index","parseInt","newGuides","guides","map","guide","day","populateDates","rows","row","handleArrayChange","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Row from '../Row';\nimport {Table} from 'react-bootstrap';\nimport API from '../../utils/API'\nconst moment = require('moment')\n\nconst dayArray = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n\nclass WeekSchedule extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { //TODO change this from state to database query\n            weekSchedule: this.props.week || {}\n        }\n        this.updateSchedule = this.updateSchedule.bind(this);\n\n    }\n\n\n    populateDates(week, year) { //returns an array with each date of the given week (e.g. 1-Jul, 2-Jul, 3-Jul, etc.)\n        const date = moment(week + ' ' + year, \"w-YYYY\").format('D-MMM')\n        let dateArray = []\n        for (let i = 1; i < 8; i++) {\n            dateArray.push(moment(date).add(i, 'day').format('D-MMM'))\n        }\n        return dateArray\n    }\n\n    updateSchedule(){\n        API.updateWeek(this.state.weekSchedule)\n    }\n\n    handleChange(event) {\n        const {name, value} = event.target\n        this.setState({ [name]: value })\n    }\n\n    handleArrayChange(event) { //TODO add ability to add row\n        const {name, value} = event.target\n        const index = parseInt(name)\n        const newGuides = this.state.guides.map((guide, i) => {\n            return(i === index ? value : guide)\n        });\n        this.setState({ guides: newGuides })\n    }\n\n    render() {\n        // console.log(this.state.week.rows)\n        return (\n            <Table striped bordered hover>\n            \n                <thead>\n                    <tr>\n                        <th><button onClick = {this.updateSchedule}>Click me</button></th>\n                        {dayArray.map(day => <th>{day}</th>)}\n                    </tr>\n                    <tr>\n                        <th></th>\n                        {this.populateDates(this.state.weekSchedule.week, this.state.weekSchedule.year).map(date => <th>{date}</th>)}\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state.weekSchedule.rows.map(row => {\n                        return (\n                            <Row\n                                row={row}\n                                handleArrayChange={this.state.handleArrayChange}\n                                handleChange={this.state.handleChange}\n                            />\n                        )\n                    })}\n                    <tr>\n\n                    </tr>\n                </tbody>\n            </Table >\n        )\n    }\n\n}\n\nexport default WeekSchedule;\n"]},"metadata":{},"sourceType":"module"}