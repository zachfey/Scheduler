{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\Zach\\\\bc\\\\00-Homework\\\\Scheduler\\\\client\\\\src\\\\components\\\\PrivateRoute\\\\privateRoute.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var component = _ref.component,\n      _ref$exact = _ref.exact,\n      exact = _ref$exact === void 0 ? false : _ref$exact,\n      path = _ref.path,\n      authenticated = _ref.authenticated;\n  return (// <Route {...rest} render={(props) => {\n    //     console.log('private route props', rest);\n    //     console.log(props)\n    //     if (rest.loggedIn) {\n    //         return <Component {...props} />\n    //     } else {\n    //         return <Redirect to={'/login'} />\n    //     }\n    // }} />\n    React.createElement(Route, {\n      exact: exact,\n      path: path,\n      render: function render(props) {\n        return authenticated ? React.createElement(Component, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              from: props.location\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })\n  );\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["c:\\Users\\Zach\\bc\\00-Homework\\Scheduler\\client\\src\\components\\PrivateRoute\\privateRoute.js"],"names":["React","BrowserRouter","Router","Route","Switch","Redirect","PrivateRoute","component","exact","path","authenticated","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,QAAjD,QAAiE,kBAAjE;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,wBAAcC,KAAd;AAAA,MAAcA,KAAd,2BAAsB,KAAtB;AAAA,MAA6BC,IAA7B,QAA6BA,IAA7B;AAAA,MAAmCC,aAAnC,QAAmCA,aAAnC;AAAA,SAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,wBAAC,KAAD;AACI,MAAA,KAAK,EAAEF,KADX;AAEI,MAAA,IAAI,EAAEC,IAFV;AAGI,MAAA,MAAM,EAAE,gBAACE,KAAD;AAAA,eACJD,aAAa,GACT,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADS,GAGL,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AACVC,YAAAA,QAAQ,EAAE,QADA;AAEVC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFG,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ;AAAA,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZiB;AAAA,CAArB;;AA4BA,eAAeT,YAAf","sourcesContent":["import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component, exact = false, path, authenticated }) => (\r\n\r\n    // <Route {...rest} render={(props) => {\r\n    //     console.log('private route props', rest);\r\n    //     console.log(props)\r\n    //     if (rest.loggedIn) {\r\n    //         return <Component {...props} />\r\n    //     } else {\r\n    //         return <Redirect to={'/login'} />\r\n    //     }\r\n    // }} />\r\n\r\n    <Route\r\n        exact={exact}\r\n        path={path}\r\n        render={(props) => (\r\n            authenticated ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                    <Redirect to={{\r\n                        pathname: '/login',\r\n                        state: { from: props.location }\r\n                    }} />\r\n                )\r\n        )}\r\n    />\r\n)\r\n\r\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}